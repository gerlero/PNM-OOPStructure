diff --git a/openpnm/algorithms/_drainage.py b/openpnm/algorithms/_drainage.py
index bae2e8c3b..6e5b545fa 100644
--- a/openpnm/algorithms/_drainage.py
+++ b/openpnm/algorithms/_drainage.py
@@ -238,6 +238,7 @@ class Drainage(Algorithm):
             # numbers are NOT connected to the outlets
             self['pore.trapped'] += np.isin(s, clusters, invert=True)*(s >= 0)
             self['throat.trapped'] += np.isin(b, clusters, invert=True)*(b >= 0)
+       
         # Use the identified trapped pores and throats to update the other
         # data on the object accordingly
         # self['pore.trapped'][self['pore.residual']] = False
@@ -248,6 +249,15 @@ class Drainage(Algorithm):
         self['throat.invasion_pressure'][self['throat.trapped']] = np.inf
         self['pore.invasion_sequence'][self['pore.trapped']] = -1
         self['throat.invasion_sequence'][self['throat.trapped']] = -1
+        # Make some adjustments
+        Pmask = self['pore.invasion_sequence'] < 0
+        Tmask = self['throat.invasion_sequence'] < 0
+        self['pore.invasion_sequence'] = \
+            self['pore.invasion_sequence'].astype(float)
+        self['pore.invasion_sequence'][Pmask] = np.inf
+        self['throat.invasion_sequence'] = \
+            self['throat.invasion_sequence'].astype(float)
+        self['throat.invasion_sequence'][Tmask] = np.inf
 
     def pc_curve(self, pressures=None):
         if pressures is None:
